{"version":3,"sources":["rickandmortylogo.png","fetch.js","Episodes.js","Episode.js","Characters.js","Character.js","Layout.js","App.js","index.js"],"names":["a","fetch","res","json","Episodes","useQuery","data","status","Typography","variant","results","map","episode","style","margin","Link","component","RouterLink","to","id","Card","name","airDate","Character","background","Episode","episodeId","useParams","sx","minWidth","CardContent","fontSize","color","gutterBottom","air_date","characters","character","characterUrlParts","split","filter","Boolean","characterId","length","Characters","console","info","person","gender","species","maxWidth","src","image","alt","origin","Layout","classes","useStyles","className","menu","Button","main","exact","path","makeStyles","theme","padding","display","justifyContent","backgroundColor","borderRadius","spacing","queryClient","QueryClient","App","client","ThemeProvider","Logo","createMuiTheme","typography","h1","fontFamily","h2","h3","h4","h5","h6","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1db93834.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rickandmortylogo.42c8df0b.png\";","export default async function (...args) {\r\n    const res = await fetch(...args);\r\n    return await res.json();\r\n  }\r\n  ","import React from \"react\";\r\nimport { Typography, Link, Card,} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\n\r\nexport default function Episodes() {\r\n  const { data, status } = useQuery(\"episodes\", () =>\r\n    fetch(\"https://rickandmortyapi.com/api/episode\")\r\n  );\r\n\r\n  if (status === \"loading\") {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (status === \"error\") {\r\n    return <p>Error :(</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <Typography variant=\"h2\">Episodes</Typography>\r\n          {data.results.map((episode) => (\r\n            <article key={episode.id} style={{ margin: \"16px 16px 16px 16px\" }}>\r\n              <Link component={RouterLink} to={`/episodes/${episode.id}`}>\r\n                <Card>\r\n                  <Typography variant=\"h6\">\r\n                    {episode.episode} - {episode.name}{\" \"}\r\n                    <em>{episode.airDate}</em>\r\n                  </Typography>\r\n                </Card>\r\n              </Link>\r\n            </article>\r\n          ))}\r\n    \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Link, Card, CardContent } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\n\r\nfunction Episode() {\r\n  const { episodeId } = useParams();\r\n  const { data, status } = useQuery(`episode-${episodeId}`, () =>\r\n    fetch(`https://rickandmortyapi.com/api/episode/${episodeId}`)\r\n  );\r\n\r\n  if (status === \"loading\") return <p>Loading...</p>;\r\n  if (status === \"error\") return <p>Error :(</p>;\r\n\r\n  return (\r\n    <div>\r\n      <Card sx={{ minWidth: 275 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {data.name}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            {data.air_date}\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            Characters\r\n          </Typography>\r\n          \r\n          {data.characters.map((character) => {\r\n            const characterUrlParts = character.split(\"/\").filter(Boolean);\r\n            const characterId = characterUrlParts[characterUrlParts.length - 1];\r\n            return <Character id={characterId} key={characterId} />;\r\n          })}\r\n        \r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Character({ id }) {\r\n  const { data, status } = useQuery(`character-${id}`, () =>\r\n    fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n  );\r\n\r\n  if (status === \"loading\") return <p>Loading...</p>;\r\n  if (status === \"error\") return <p>Error :(</p>;\r\n\r\n  return (\r\n    <Card style={{ margin: \"0 0 5px 0\" ,background:\"#a9e5ed\"}}>\r\n    <article key={id} >\r\n      <Link component={RouterLink} to={`/characters/${id}`} >\r\n        <Typography variant=\"h6\">{data.name}</Typography>\r\n      </Link>\r\n    </article>\r\n    </Card>\r\n  );\r\n}\r\nexport default Episode;\r\n","import React from \"react\";\r\nimport { Card,Typography, Link } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\n\r\nexport default function Characters() {\r\n  const { status, data } = useQuery(\"characters\", () =>\r\n    fetch(\"https://rickandmortyapi.com/api/character/\")\r\n  );\r\n\r\n  if (status === \"loading\") return <p>Loading...</p>;\r\n  if (status === \"error\") return <p>Error :(</p>;\r\n\r\n  console.info(data);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h2\">Characters</Typography>\r\n      {data.results.map(person => {\r\n        return (\r\n          <article key={person.id} style={{ margin: \"16px 16px 16px 16px\" }}>\r\n            <Link component={RouterLink} to={`/characters/${person.id}`}>\r\n              <Card>\r\n              <Typography variant=\"h6\">\r\n                {person.name} - {person.gender}: {person.species}\r\n              </Typography>\r\n              </Card>\r\n            </Link>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Card, CardContent } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport fetch from \"./fetch\";\r\n\r\nfunction Character() {\r\n  const { characterId } = useParams();\r\n  const { data } = useQuery(`character-${characterId}`, () =>\r\n    fetch(`https://rickandmortyapi.com/api/character/${characterId}`)\r\n  );\r\n  return (\r\n    <div>\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            <img src={data.image} alt=\"profile pic\" />\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {data.name}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n           Gender: {data.gender}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            Status: {data.status}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            Species: {data.species}\r\n          </Typography>\r\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n            Origin: {data.origin.name}\r\n            </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Character;\r\n","import React from \"react\";\r\nimport Episodes from \"./Episodes\";\r\nimport Episode from \"./Episode\";\r\nimport Characters from \"./Characters\";\r\nimport Character from \"./Character\";\r\nimport { Link, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Switch, Route, Link as RouterLink } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function Layout() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className={classes.menu}>\r\n        <Link component={RouterLink} to=\"/\">\r\n          <Button color=\"primary\">Episodes</Button>\r\n        </Link>\r\n        <Link component={RouterLink} to=\"/characters\">\r\n          <Button color=\"primary\">Characters</Button>\r\n        </Link>\r\n      </nav>\r\n      <main className={classes.main}>\r\n        <Switch>\r\n        <Route exact path=\"/\">\r\n            <Episodes />\r\n          </Route>\r\n          <Route exact path=\"/episodes/:episodeId\">\r\n            <Episode />\r\n          </Route>\r\n          <Route exact path=\"/characters\">\r\n            <Characters />\r\n          </Route>\r\n          <Route exact path=\"/characters/:characterId\">\r\n            <Character />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n  main: {\r\n    margin: \"0 auto\",\r\n    padding: \"16px\"\r\n  },\r\n  menu: {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#a9e5ed\",\r\n    borderRadius: \"10px\",\r\n    \"& button\": {\r\n      margin: theme.spacing(1)\r\n    }\r\n  }\r\n}));","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Logo from './rickandmortylogo.png';\nimport \"./index.css\";\nimport Layout from \"./Layout\";\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  return (\n   \n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <ThemeProvider theme={theme}>\n        <img className=\"heroimage\" src={Logo} alt=\"logo\" />\n        \n          <Layout />\n        </ThemeProvider>\n      </Router>\n    </QueryClientProvider>\n  );\n}\nconst theme = createMuiTheme({\n  typography: {\n    h1: {\n      fontFamily: \"Roboto Mono, monospace\",\n    },\n    h2: {\n      color:\"white\",\n      fontFamily: \"Roboto Mono, monospace\",\n    },\n    h3: {\n      fontFamily: \"Roboto Mono, monospace\",\n    },\n    h4: {\n      fontFamily: \"Roboto Mono, monospace\",\n    },\n    h5: {\n      fontFamily: \"Roboto Mono, monospace\",\n    },\n    h6: {\n      fontFamily: \"Roboto Mono, monospace\",\n    },\n  },\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}